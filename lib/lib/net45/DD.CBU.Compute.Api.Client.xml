<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DD.CBU.Compute.Api.Client</name>
    </assembly>
    <members>
        <member name="T:DD.CBU.Compute.Api.Client.ApiClientException">
            <summary>
            	The base class for API client exceptions.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiClientException.#ctor(System.String,System.Object[])">
            <summary>
            	Create a new <see cref="T:DD.CBU.Compute.Api.Client.ApiClientException"/>.
            </summary>
            <param name="messageOrFormat">
            	The exception message or message format.
            </param>
            <param name="formatArguments">
            	Optional message format arguments.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiClientException.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            	Create a new <see cref="T:DD.CBU.Compute.Api.Client.ApiClientException"/>.
            </summary>
            <param name="messageOrFormat">
            	The exception message or message format.
            </param>
            <param name="innerException">
            	A previous exception that caused the current exception to be raised.
            </param>
            <param name="formatArguments">
            	Optional message format arguments.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiClientException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            	Deserialisation constructor for <see cref="T:DD.CBU.Compute.Api.Client.ApiClientException"/>.
            </summary>
            <param name="info">
            	A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> serialisation data store that holds the serialized exception data.
            </param>
            <param name="context">
            	A <see cref="T:System.Runtime.Serialization.StreamingContext"/> value that indicates the source of the serialised data.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	The <paramref name="info"/> parameter is null.
            </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            	The class name is <c>null</c> or <see cref="P:System.Exception.HResult"/> is zero (0).
            </exception>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.ApiUris">
            <summary>
            	Constants and formatters for API URLs.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.ApiUris.MyAccount">
            <summary>
            	The path (relative to the base API URL) of the My Account action.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ComputeBase(System.String)">
            <summary>
            	Get the base URI for the CaaS REST API.
            </summary>
            <param name="targetRegionName">
            	The target region's short name ("au", for example).
            </param>
            <returns>
            	The base URI for the CaaS REST API.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DatacentersWithDiskSpeedDetails(System.Guid)">
            <summary>
            	Get the relative URI for the CaaS API action that retrieves a list of all data centres available for use by the specified organisation.
            </summary>
            <param name="organizationId">
            	The organisation Id.
            </param>
            <returns>
            	The relative action Uri.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DatacentresWithMaintanence(System.Guid)">
            <summary>
            Get the relative URI for the CaaS API action that retrieves a list of all data centres available for use by the specified organisation.
            </summary>
            <param name="orgId">The organisation Id</param>
            <returns>The relative action Uri.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ImagesWithSoftwareLabels(System.String)">
            <summary>
            	Get the relative URI for the CaaS API action that retrieves a list of all system-defined images deployed in the specified data centre.
            </summary>
            <param name="locationName">
            	The data centre location name.
            </param>
            <returns>
            	The relative action Uri.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeployedServers(System.Guid)">
            <summary>
            Gets the relative URI for the CaaS API action that retrieves a list of all deployed servers.
            </summary>
            <param name="orgId">The organization id</param>
            <returns>A list of deployed servers</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.CustomerImagesWithSoftwareLabels(System.Guid,System.String)">
            <summary>
            Gets the relative URI for the CaaS API action that retrieves a list of customer images with software labels
            </summary>
            <param name="orgId">The organization id</param>
            <param name="networkLocation">The network location id</param>
            <returns>A list of OS server images</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeployServer(System.Guid)">
            <summary>
            The relative URI for the CaaS API action that allows a server to be deployed
            </summary>
            <param name="orgId"></param>
            <returns></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeleteServer(System.Guid,System.String)">
            <summary>
            Deletes the server.
            <remarks>The Server must be stopped before it can be deleted</remarks>
            </summary>
            <param name="orgId">The organization id</param>
            <param name="serverId">The server id</param>
            <returns>Returns the relative URI of the REST request for a deletion of the server</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ShutdownServer(System.Guid,System.String)">
            <summary>
            A “graceful” stop of a server by initiating a shutdown sequence within the guest operating system.
            </summary>
            <param name="orgId">The organization id</param>
            <param name="serverId">The server id</param>
            <returns>Returns the relative URI of the REST request for a graceful shutdown of the server</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.PowerOnServer(System.Guid,System.String)">
            <summary>
            Powers on an existing deployed server.
            </summary>
            <param name="orgId">The organization id</param>
            <param name="serverId">The server id</param>
            <returns>Returns the relative URI of the REST request for starting the server</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.PoweroffServer(System.Guid,System.String)">
            <summary>
            An abrupt power off of the server. Success is guarenteed
            </summary>
            <param name="orgId">The organization id</param>
            <param name="serverId">The server id</param>
            <returns>Returns the relative URI of the REST request for powering off the server</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.RebootServer(System.Guid,System.String)">
            <summary>
            A "graceful" reboot of the server.
            </summary>
            <param name="orgId">The organization id</param>
            <param name="serverId">The server id</param>
            <returns>Returns the relative URI of the REST request for rebooting the server</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.NetworkWithLocations(System.Guid)">
            <summary>
            Lists the Networks deployed across all data center locations for the supplied organization.
            </summary>
            <param name="orgId">The organization id</param>
            <returns>Returns the relative URI of the REST request for a list of networks</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.CreateAclRule(System.Guid,System.String)">
            <summary>
            Create an ACL rule
            </summary>
            <param name="orgId">The organization id</param>
            <param name="networkId">The network id</param>
            <returns>Returns the relative URI of the REST request for creating an ACL rule</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeleteAclRule(System.Guid,System.String,System.String)">
            <summary>
            Removes the ACL rule
            </summary>
            <param name="orgId">The organization id</param>
            <param name="networkId">The network id</param>
            <param name="aclId">The ACL rule id</param>
            <returns>Returns the relative URI of the REST request for removing an ACL rule</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetAclRules(System.Guid,System.String)">
            <summary>
            Getting all the ACL rules in the network
            </summary>
            <param name="orgId">The organization id</param>
            <param name="networkId">The network id</param>
            <returns>Returns the relative URI of the REST request for getting ACL rules</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetNatRules(System.Guid,System.String)">
            <summary>
            Gets all the NAT rules for a specified network.
            </summary>
            <param name="orgId">The organization id.</param>
            <param name="networkId">The network id.</param>
            <returns>Returns the relative URI of the REST request for getting the NAT rules</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.CreateNatRule(System.Guid,System.String)">
            <summary>
            Creates a new NAT rule.
            </summary>
            <param name="orgId">The organization id.</param>
            <param name="networkId">The network id.</param>
            <returns>Returns the relative URI of the REST request for creating a new NAT rule</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeleteNatRule(System.Guid,System.String,System.String)">
            <summary>
            Deletes a specified NAT rule
            </summary>
            <param name="orgId">The organization id.</param>
            <param name="networkId">The network id.</param>
            <param name="natRuleId">The NAT rule id to delete</param>
            <returns>Returns the relative URI of the REST request for deleting an existing NAT rule</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.CreateNetwork(System.Guid)">
            <summary>
            Gets the relative URI for the CaaS API action that creates a network in a specified data centre location.
            </summary>
            <param name="orgId">The organization id</param>
            <returns>Returns the relative URI of the REST request for creating a network.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeleteNetwork(System.Guid,System.String)">
            <summary>
            
            </summary>
            <param name="orgId"></param>
            <param name="networkId"></param>
            <returns></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.EnableBackup(System.Guid,System.String)">
            <summary>
            Enables the Backup service for a deployed Server. Requires the Organization ID, Server ID and the Service Plan being enabled.
            </summary>
            <param name="orgId">The organization id</param>
            <param name="serverId">The server id</param>
            <returns>Returns the relative URI of the REST request for enabling the backup on the server</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DisableBackup(System.Guid,System.String)">
            <summary>
            Disables the Backup service for a deployed server.
            </summary>
            <param name="orgId">The organization id</param>
            <param name="serverId">The server id</param>
            <returns>Returns the relative URI of the REST request for disabling the backup on the server</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ChangeBackupPlan(System.Guid,System.String)">
            <summary>
            Modify the backup service plan for a deployed server.
            </summary>
            <param name="orgId">The organization id</param>
            <param name="serverId">The server id</param>
            <returns>Returns the relative URI of the REST request for modifying the backup service pland of the server</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.BackupClientTypes(System.Guid,System.String)">
            <summary>
            Backup client types associated with a specific server.
            </summary>
            <param name="orgId">The organization id</param>
            <param name="serverId">The server id</param>
            <returns>Returns the relative URI of the REST request listing the client types for the server</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.BackupStoragePolicies(System.Guid,System.String)">
            <summary>
            Backup storage policies associated with a specific server.
            </summary>
            <param name="orgId">The organization id</param>
            <param name="serverId">The server id</param>
            <returns>Returns the relative URI of the REST request listing the storage policies for the server</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.BackupSchedulePolicies(System.Guid,System.String)">
            <summary>
            Backup schedule policies associated with a specific server.
            </summary>
            <param name="orgId">The organization id</param>
            <param name="serverId">The server id</param>
            <returns>Returns the relative URI of the REST request listing the schedule policies for the server</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetBackupDetails(System.Guid,System.String)">
            <summary>
            Retrieves complete details of how the Backup service is configured for a specific deployed Server.
            Requires the Organization ID and Server ID for the Server and that the Server already has the Backup service enabled.
            The user must be the Primary Administrator or a Sub-Administrator with the “backup” role. 
            </summary>
            <param name="orgId">The organization id</param>
            <param name="serverId">The server id</param>
            <returns>Returns the relative URI of the REST request for getting the backup details of the server</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.AddBackupClient(System.Guid,System.String)">
            <summary>
            Provisions a new Backup Client for a deployed Server.
            Requires the Organization ID, the Server ID for the server and that the Server already has the Backup service enabled.
            The user must be the Primary Administrator or a Sub-Administrator with the “backup” role
            </summary>
            <param name="orgId">The organization id</param>
            <param name="serverId">The server id</param>
            <returns>Returns the relative URI of the REST request for adding a backup client to the server</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.RemoveBackupClient(System.Guid,System.String,System.String)">
            <summary>
            Removes a Backup Client for the Backup service on a deployed Server. Requires the Organization ID, 
            Server ID and Backup Client ID for the relevant Backup Client and Server and that the Server already has 
            the Backup service enabled. The user must be the Primary Administrator or a Sub-Administrator with the “backup” role. 
            Note that the Backup Client ID is available from the backupClient.id additionalInformation element in the 
            response received when the Backup Client was originally added. See Add Backup Client for details. 
            </summary>
            <param name="orgId">The organization id</param>
            <param name="serverId">The server id</param>
            <param name="backupClientId">The backup client id to remove</param>
            <returns>Returns the relative URI of the REST request for removing a backup client from the server</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ModifyBackupClient(System.Guid,System.String,System.String)">
            <summary>
            Modifies the settings of an existing Backup Client for a deployed Server.
            Requires the Organization ID, the Server ID for the server and that the Server already has the Backup service enabled.
            The user must be the Primary Administrator or a Sub-Administrator with the “backup” role. 
            <remarks>Note that the Backup Client type cannot be changed.</remarks>
            </summary>
            <param name="orgId">The organization id</param>
            <param name="serverId">The server id</param>
            <param name="backupClientId">The backup client id to modify</param>
            <returns>Returns the relative URI of the REST request for modifying a backup client for the server</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.InitiateBackup(System.Guid,System.String,System.String)">
            <summary>
            Requests an immediate Backup for a Backup Client
            </summary>
            <param name="organizationId">The organization id</param>
            <param name="serverId">The server id</param>
            <param name="backupClientId">The backup client id</param>
            <returns>Returns the relative URI of the REST request for initiating a backup on the client</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.CancelBackupJobs(System.Guid,System.String,System.String)">
            <summary>
            Requests a cancellation of all running jobs for a backup client
            </summary>
            <param name="organizationId">The organization id</param>
            <param name="serverId">The server id</param>
            <param name="backupClientId">The backup client id</param>
            <returns>Returns the relative URI of the REST request for cancelling backup jobs on the client</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetOvfPackages(System.Guid)">
            <summary>
            Gets the relative URI for the CaaS API action that retrieves a list of OVF Packages
            </summary>
            <param name="orgId">The organization id</param>
            <returns>Returns the relative URI of the REST request for getting the OVF Packages</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ImportCustomerImage(System.Guid)">
            <summary>
            Gets the relative URI for the CaaS API action that POST a request to import a customer image
            </summary>
            <param name="orgId">The organization id</param>
            <returns>Returns the relative URI of the REST request for importing a customer image</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetCustomerImageImports(System.Guid)">
            <summary>
            Gets the relative URI for the CaaS API action that retrieves a list of customer image imports in progress.
            </summary>
            <param name="orgId">The organization id</param>
            <returns>a list of customer image imports in progress</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetUriForProvisionOnGeo(System.Guid)">
            <summary>
            Get Uri for Provision On Geo
            </summary>
            <param name="organizationId">Organization Id</param>
            <returns>Uri</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetUriForProvisioning(System.Guid)">
            <summary>
            Get Uri for Provisioning
            </summary>
            <param name="organizationId">Organization Id</param>
            <returns>Uri</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetUriForListingPricingPlans(System.Guid,System.Guid)">
            <summary>
            Get Uri For Listing Pricing Plans
            </summary>
            <param name="organizationId">Organization Id</param>
            <param name="geoId">Geo Id</param>
            <returns>Uri</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetUriForListMultiGeoDataCentersWithKey(System.Guid)">
            <summary>
            Get Uri For List Multi-Geography Data Centers With Key
            </summary>
            <param name="organizationId">Organization Id</param>
            <returns>Uri</returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Backup.ComputeApiClientBackupExtensions">
            <summary>
            Extension methods for the backup section of the CaaS API.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.ComputeApiClientBackupExtensions.EnableBackup(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,ServicePlan)">
            <summary>
            Enables the backup with a specific service plan.
            </summary>
            <param name="client">The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object</param>
            <param name="serverId">The server id</param>
            <param name="plan">The enumerated service plan</param>
            <returns>The status of the request</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.ComputeApiClientBackupExtensions.DisableBackup(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String)">
            <summary>
            Disable the backup service from the server.
            <remarks>Note the server MUST not have any clients</remarks>
            </summary>
            <param name="client">The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object</param>
            <param name="serverId">The server id</param>
            <returns>The status of the request</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.ComputeApiClientBackupExtensions.ChangeBackupPlan(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,ServicePlan)">
            <summary>
            Modify the backup service plan.
            </summary>
            <param name="client">The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object</param>
            <param name="serverId">The server id</param>
            <param name="plan">The plan to change to</param>
            <returns>The status of the request</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.ComputeApiClientBackupExtensions.GetBackupClientTypes(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String)">
            <summary>
            List the client types for a specified server
            </summary>
            <param name="client">The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object</param>
            <param name="serverId">The server id</param>
            <returns>The status of the request</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.ComputeApiClientBackupExtensions.GetBackupStoragePolicies(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String)">
            <summary>
            List the storage policies for a specified server
            </summary>
            <param name="client">The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object</param>
            <param name="serverId">The server id</param>
            <returns>The status of the request</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.ComputeApiClientBackupExtensions.GetBackupSchedulePolicies(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String)">
            <summary>
            List the schedule policies for a specified server
            </summary>
            <param name="client">The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object</param>
            <param name="serverId">The server id</param>
            <returns>The status of the request</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.ComputeApiClientBackupExtensions.GetBackupClients(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String)">
            <summary>
            Gets a list of backup clients.
            </summary>
            <param name="client">The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object</param>
            <param name="serverId">The server id</param>
            <returns>A list of backup clients</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.ComputeApiClientBackupExtensions.AddBackupClient(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,DD.CBU.Compute.Api.Contracts.Backup.BackupClientType,DD.CBU.Compute.Api.Contracts.Backup.BackupStoragePolicy,DD.CBU.Compute.Api.Contracts.Backup.BackupSchedulePolicy,AlertingType)">
            <summary>
            Adds a backup client to a specified server.
            </summary>
            <param name="client">The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object</param>
            <param name="serverId">The server id</param>
            <param name="clientType">The backup client type to add</param>
            <param name="storagePolicy">The backup storage policy</param>
            <param name="schedulePolicy">The backup schedule policy</param>
            <param name="alertingType">The alerting type</param>
            <returns>The status of the request</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.ComputeApiClientBackupExtensions.RemoveBackupClient(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,BackupClientDetailsType)">
            <summary>
            Removes the backup client from a specified server.
            </summary>
            <param name="client">The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object</param>
            <param name="serverId">The server id</param>
            <param name="backupClient">The backup client to remove</param>
            <returns>The status of the request</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.ComputeApiClientBackupExtensions.ModifyBackupClient(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,BackupClientDetailsType,DD.CBU.Compute.Api.Contracts.Backup.BackupStoragePolicy,DD.CBU.Compute.Api.Contracts.Backup.BackupSchedulePolicy,AlertingType)">
            <summary>
            Modifies the backup client on the specified server.
            </summary>
            <param name="client">The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object</param>
            <param name="serverId">The server id</param>
            <param name="backupClient">The backup client to modify</param>
            <param name="storagePolicy">The storage policy to modify</param>
            <param name="schedulePolicy">The schedule policy to modify</param>
            <param name="alertingType">The alerting type to modify</param>
            <returns>The status of the request</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.ComputeApiClientBackupExtensions.InitiateBackup(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,BackupClientDetailsType)">
            <summary>
            Requests an immediate Backup for a Backup Client
            </summary>
            <param name="client">The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object</param>
            <param name="serverId">The server id</param>
            <param name="backupClient">The backup client to modify</param>
            <returns>The status of the request</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.ComputeApiClientBackupExtensions.CancelBackupJob(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,BackupClientDetailsType)">
            <summary>
            Requests a cancellation for any running job for a backup client
            </summary>
            <param name="client">The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object</param>
            <param name="serverId">The server id</param>
            <param name="backupClient">The backup client to modify</param>
            <returns>The status of the request</returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.ClientError">
            <summary>
            	Represents the reason that a <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClientException"/> was raised.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.ClientError.Unknown">
            <summary>
            	An unknown reason.
            </summary>
            <remarks>
            	Used to detect uninitialised values; do not use directly.
            </remarks>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.ClientError.NotLoggedIn">
            <summary>
            	The client has not logged into the CaaS API.
            </summary>
            <remarks>
            	Call <see cref="M:DD.CBU.Compute.Api.Client.ComputeApiClient.LoginAsync(System.Net.ICredentials)"/> before calling other operations.
            </remarks>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.ClientError.AlreadyLoggedIn">
            <summary>
            	The client is already logged into the CaaS API.
            </summary>
            <remarks>
            	To log in with different credentials than those currently used by the client, first call <see cref="M:DD.CBU.Compute.Api.Client.ComputeApiClient.Logout"/> before calling <see cref="M:DD.CBU.Compute.Api.Client.ComputeApiClient.LoginAsync(System.Net.ICredentials)"/>.
            </remarks>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.ComputeApiClient">
            <summary>
            	A client for the Dimension Data Compute-as-a-Service (CaaS) API.
            </summary>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Utilities.DisposableObject">
            <summary>
            	Base class for disposable objects.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.Utilities.DisposableObject._isDisposed">
            <summary>
            	Has the object been disposed?
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Utilities.DisposableObject.#ctor">
            <summary>
            	Create a new disposable object.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Utilities.DisposableObject.Finalize">
            <summary>
            	Finaliser for <see cref="T:DD.CBU.Compute.Api.Client.Utilities.DisposableObject"/>.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Utilities.DisposableObject.Dispose">
            <summary>
            	Dispose of resources being used by the disposable object.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Utilities.DisposableObject.Dispose(System.Boolean)">
            <summary>
            	Dispose of resources being used by the disposable object.
            </summary>
            <param name="disposing">
            	Explicit disposal?
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Utilities.DisposableObject.CheckDisposed">
            <summary>
            	Check if the object has been disposed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            	The object has been disposed.
            </exception>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Utilities.DisposableObject.IsDisposed">
            <summary>
            	Has the object been disposed?
            </summary>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient">
            <summary>
            The interface of the CaaS API Client
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.LoginAsync(System.Net.ICredentials)">
            <summary>
            Login into the organisation account using credentials.
            </summary>
            <param name="accountCredentials">The account credentials.</param>
            <returns>The account associated with the organisation.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.GetListOfSoftwareLabels">
            <summary>
            Gets a list of software labels.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.GetListOfMultiGeographyRegions">
            <summary>
            Gets a list of multi geography regions
            </summary>
            <returns></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.DeleteSubAdministratorAccountAsync(System.String)">
            <summary>
            Deletes a sub administrator account
            </summary>
            <param name="username">The username</param>
            <returns></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.DesignatePrimaryAdministratorAccountAsync(System.String)">
            <summary>
            Designate a primary administrator account
            </summary>
            <param name="username">The username</param>
            <returns></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.GetDataCentersWithMaintenanceStatuses">
            <summary>
            Gets all the data centres for the organisation.
            </summary>
            <returns>The data centres.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.GetAccounts">
            <summary>
            Gets the account of the organisation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.AddSubAdministratorAccount(DD.CBU.Compute.Api.Contracts.Directory.Account)">
            <summary>
            Adds a sub administrator account
            </summary>
            <param name="account">The account</param>
            <returns></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.UpdateAdministratorAccount(DD.CBU.Compute.Api.Contracts.Directory.Account)">
            <summary>
            Updates an administrator account
            </summary>
            <param name="account">The account</param>
            <returns></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.GetAvailableDataCenters">
            <summary>
            Gets available data centres
            </summary>
            <returns></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.GetImages(System.String)">
            <summary>
            Gets the OS images at a particular location.
            </summary>
            <param name="locationName">The location.</param>
            <returns></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.GetCustomerServerImages(System.String)">
            <summary>
            Gets the deployed customer server images.
            </summary>
            <param name="networkLocation">The location.</param>
            <returns></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.DeployServerImageTask(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Deploy a server using an image in a specified network.
            </summary>
            <param name="name">The name of the new server.</param>
            <param name="description">The description of the new server.</param>
            <param name="networkId">The network id to deploy the server.</param>
            <param name="imageId">The image id to deploy the server.</param>
            <param name="adminPassword">The administrator password.</param>
            <param name="isStarted">Will the server powers on after deployment?</param>
            <returns>The status of the deployment.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.ServerPowerOn(System.String)">
            <summary>
            Powers on the server.
            </summary>
            <param name="serverId">The server id.</param>
            <returns></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.ServerPowerOff(System.String)">
            <summary>
            Powers off the server.
            </summary>
            <param name="serverId"></param>
            <returns></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.ServerRestart(System.String)">
            <summary>
            Restart the server.
            </summary>
            <param name="serverId">The server id.</param>
            <returns></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.ServerShutdown(System.String)">
            <summary>
            Shutdown the server.
            </summary>
            <param name="serverId">The server id.</param>
            <returns></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.ServerDelete(System.String)">
            <summary>
            Delete the server.
            </summary>
            <param name="serverId">The server id.</param>
            <returns></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.GetDeployedServers">
            <summary>
            Gets the deployed servers.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.Provision(System.Guid,DD.CBU.Compute.Api.Contracts.Provisioning.CustomerProvision)">
            <summary>
            Provision customer in home geo
            </summary>
            <param name="organizationId">Organization Id</param>
            <param name="customerProvision">Customer Provision</param>
            <returns>Status</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.ProvisionOnGeo(System.Guid,System.Guid,System.String)">
            <summary>
            Provision customers on Geo
            </summary>
            <param name="organizationId">Organization Id</param>
            <param name="geographyId">Geography Id</param>
            <param name="customerPricingPlanKey">Pricing Plan Key</param>
            <returns>Status</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.ListMultiGeoDataCentersWithKey(System.Guid)">
            <summary>
            List Multi-Geography Data Centers With Key
            </summary>
            <param name="organizationId">Organization Id</param>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.Account">
            <summary>
            The account of the organisation.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.WebApi">
            <summary>
            The web API that requests directly from the REST API.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.#ctor(System.String)">
            <summary>
            	Create a new Compute-as-a-Service API client.
            </summary>
            <param name="targetRegionName">
            	The name of the region whose CaaS API end-point is targeted by the client.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.#ctor(System.Uri)">
            <summary>
            Creates a new CaaS API client using a base URI.
            </summary>
            <param name="baseUri">The base URI to use for the CaaS API.</param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.#ctor(DD.CBU.Compute.Api.Client.Interfaces.IHttpClient)">
            <summary>
            Creates a new CaaS API client using a base URI.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.Dispose(System.Boolean)">
            <summary>
            	Dispose of resources being used by the CaaS API client.
            </summary>
            <param name="disposing">
            	Explicit disposal?
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.LoginAsync(System.Net.ICredentials)">
            <summary>
            Asynchronously log into the CaaS API.
            </summary>
            <param name="accountCredentials">
            The CaaS account credentials used to authenticate against the CaaS API.
            </param>
            <returns>
            An <see cref="T:DD.CBU.Compute.Api.Contracts.Directory.IAccount"/> implementation representing the CaaS account that the client is logged into.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.Logout">
            <summary>
            Log out of the CaaS API.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.GetListOfSoftwareLabels">
            <summary>
            Gets a list of software labels
            </summary>
            <returns></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.GetListOfMultiGeographyRegions">
            <summary>
            Returns a list of the Multi-Geography Regions available for the supplied {org-id
            An element is returned for each available Geographic Region.
            </summary>
            <returns>A list of regions associated with the org ID.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.DeleteSubAdministratorAccountAsync(System.String)">
            <summary>
            Allows the current Primary Administrator user to designate a Sub-Administrator user belonging to the 
            same organization to become the Primary Administrator for the organization.
            The Sub-Administrator is identified by their <paramref name="username"/>.
            </summary>
            <param name="username">The Sub-Administrator account.</param>
            <returns>A <see cref="T:DD.CBU.Compute.Api.Contracts.General.ApiStatus"/> result that describes whether or not the operation was successful.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.DesignatePrimaryAdministratorAccountAsync(System.String)">
            <summary>
            Allows the current Primary Administrator user to designate a Sub-Administrator user belonging to the 
            same organization to become the Primary Administrator for the organization.
            The Sub-Administrator is identified by their <paramref name="username"/>.
            </summary>
            <param name="username">The Sub-Administrator account.</param>
            <returns>A <see cref="T:DD.CBU.Compute.Api.Contracts.General.ApiStatus"/> result that describes whether or not the operation was successful.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.GetDataCentersWithMaintenanceStatuses">
            <summary>
            This function identifies the list of data centers available to the organization of the authenticating user. 
            </summary>
            <returns>The list of data centers associated with the organization.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.GetAccounts">
            <summary>
            Lists the Accounts belonging to the Organization identified by the organisation. The list will include all 
            SubAdministrator accounts and the Primary Administrator account. The Primary Administrator is unique and is 
            identified by the “primary administrator” role.
            </summary>
            <returns>A list of accounts associated with the organisation.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.AddSubAdministratorAccount(DD.CBU.Compute.Api.Contracts.Directory.Account)">
            <summary>
            Adds a new Sub-Administrator Account to the organization. 
            The account is created with a set of roles defining the level of access to the organization’s Cloud 
            resources or the account can be created as “read only”, restricted to just viewing Cloud resources and 
            unable to generate Cloud Reports.
            </summary>
            <param name="account">The account that will be added to the org.</param>
            <returns>A <see cref="T:Status"/> object instance that shows the results of the operation.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.UpdateAdministratorAccount(DD.CBU.Compute.Api.Contracts.Directory.Account)">
            <summary>
            This function updates an existing Administrator Account.
            </summary>
            <param name="account">The account to be updated.</param>
            <returns>A <see cref="T:Status"/> object instance that shows the results of the operation.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.GetAvailableDataCenters">
            <summary>
            	Asynchronously get a list of all CaaS data centres that are available for use by the specified organisation.
            </summary>
            <returns>
            	A read-only list of <see cref="T:DD.CBU.Compute.Api.Contracts.Datacenter.IDatacenterDetail"/>s representing the data centre information.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.GetImages(System.String)">
            <summary>
            	Get a list of all system-defined images (with software labels) deployed in the specified data centre.
            </summary>
            <param name="locationName">
            	The short name of the location in which the data centre is located.
            </param>
            <returns>
            	A read-only list <see cref="T:DeployedImageWithSoftwareLabelsType"/>, sorted by UTC creation date / time, representing the images.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.GetCustomerServerImages(System.String)">
            <summary>
            This function lists the available Customer Images at a particular Location for the provided org-id.
            The response adds to the deprecated List Deployed Customer Images in Location function with 
            the addition of zero to many, optional softwareLabel elements, listing the Priced Software packages installed on the Customer Image.
            </summary>
            <param name="networkLocation">The network location</param>
            <returns>A list of deployed customer images with software labels in location</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.DeployServerImageTask(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Deploys a server using an image into a specified network.
            </summary>
            <param name="name"></param>
            <param name="description"></param>
            <param name="networkId"></param>
            <param name="imageId"></param>
            <param name="adminPassword"></param>
            <param name="isStarted"></param>
            <returns></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.ServerPowerOn(System.String)">
            <summary>
            Powers on the server.
            </summary>
            <param name="serverId">The server id</param>
            <returns>Returns a status of the HTTP request</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.ServerPowerOff(System.String)">
            <summary>
            Powers off the server
            </summary>
            <param name="serverId">The server id</param>
            <returns>Returns a status of the HTTP request</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.ServerRestart(System.String)">
            <summary>
            Hard boot of the server.
            </summary>
            <param name="serverId">The server id</param>
            <returns>Returns a status of the HTTP request</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.ServerShutdown(System.String)">
            <summary>
            "Graceful" shutdown of the server.
            </summary>
            <param name="serverId">The server id</param>
            <returns>Returns a status of the HTTP request</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.ServerDelete(System.String)">
            <summary>
            Deletes the server. <remarks>The server must be turned off and with backup disabled</remarks>
            </summary>
            <param name="serverId">The server id</param>
            <returns>Returns a status of the HTTP request</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.GetDeployedServers">
            <summary>
            Gets all the deployed servers.
            </summary>
            <returns>A list of deployed servers</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.Provision(System.Guid,DD.CBU.Compute.Api.Contracts.Provisioning.CustomerProvision)">
            <summary>
            Provision customer in home geo
            </summary>
            <param name="organizationId">Organization Id</param>
            <param name="customerProvision">Customer Provision</param>
            <returns>Status</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.ProvisionOnGeo(System.Guid,System.Guid,System.String)">
            <summary>
            Provision customers on Geo
            </summary>
            <param name="organizationId">Organization Id</param>
            <param name="geographyId">Geography Id</param>
            <param name="customerPricingPlanKey">Pricing Plan Key</param>
            <returns>Status</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.ListMultiGeoDataCentersWithKey(System.Guid)">
            <summary>
            List Multi-Geography Data Centers With Key
            </summary>
            <param name="organizationId">Organization Id</param>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.ComputeApiClient.Account">
            <summary>
            	Read-only information about the CaaS account targeted by the CaaS API client.
            </summary>
            <remarks>
            	<c>null</c>, unless logged in.
            </remarks>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.ComputeApiClient.WebApi">
            <summary>
            Access to the web API for login/logout and account info
            </summary>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.ComputeApiClientException">
            <summary>
            	Exception raised by the CaaS API client when it encounters an error.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.ComputeApiClientException._error">
            <summary>
            	The reason that the <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClientException"/> was raised.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClientException.#ctor(DD.CBU.Compute.Api.Client.ClientError,System.String,System.Object[])">
            <summary>
            	Create a new <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClientException"/>.
            </summary>
            <param name="error">
            	The reason that the exception is being raised.
            </param>
            <param name="messageOrFormat">
            	The exception message or message format.
            </param>
            <param name="formatArguments">
            	Optional message format arguments.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClientException.#ctor(DD.CBU.Compute.Api.Client.ClientError,System.String,System.Exception,System.Object[])">
            <summary>
            	Create a new <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClientException"/>.
            </summary>
            <param name="error">
            	The reason that the exception is being raised.
            </param>
            <param name="messageOrFormat">
            	The exception message or message format.
            </param>
            <param name="innerException">
            	A previous exception that caused the current exception to be raised.
            </param>
            <param name="formatArguments">
            	Optional message format arguments.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClientException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            	Deserialisation constructor for <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClientException"/>.
            </summary>
            <param name="info">
            	A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> serialisation data store that holds the serialized exception data.
            </param>
            <param name="context">
            	A <see cref="T:System.Runtime.Serialization.StreamingContext"/> value that indicates the source of the serialised data.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	The <paramref name="info"/> parameter is null.
            </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            	The class name is <c>null</c> or <see cref="P:System.Exception.HResult"/> is zero (0).
            </exception>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClientException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            	Get exception data for serialisation.
            </summary>
            <param name="info">
            	A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> serialisation data store that will hold the serialized exception data.
            </param>
            <param name="context">
            	A <see cref="T:System.Runtime.Serialization.StreamingContext"/> value that indicates the source of the serialised data.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	The <paramref name="info"/> parameter is null.
            </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            	The class name is <c>null</c> or <see cref="P:System.Exception.HResult"/> is zero (0).
            </exception>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClientException.ToString">
            <summary>
            	Create a string representation of the current exception.
            </summary>
            <returns>
            	A string representation of the current exception.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClientException.NotLoggedIn">
            <summary>
            	Create a <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClientException"/> to be raised because the client is not currently logged into the CaaS API.
            </summary>
            <returns>
            	The configured <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClientException"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClientException.AlreadyLoggedIn">
            <summary>
            	Create a <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClientException"/> to be raised because the client is already logged into the CaaS API.
            </summary>
            <returns>
            	The configured <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClientException"/>.
            </returns>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.ComputeApiClientException.Error">
            <summary>
            	The reason that the <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClientException"/> was raised.
            </summary>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.ComputeApiException">
            <summary>
            	Exception raised by the CaaS API client when it encounters an error response from the CaaS API.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.ComputeApiException.DefaultAdditionalErrorDetailMessage">
            <summary>
            	The default additional detail message used if there is no additional error detail available.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.ComputeApiException._error">
            <summary>
            	The reason that the <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiException"/> was raised.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.ComputeApiException._additionalDetail">
            <summary>
            	Additional error detail (if any) provided by the CaaS API.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiException.#ctor(DD.CBU.Compute.Api.Client.ComputeApiError,System.String,System.String,System.Object[])">
            <summary>
            	Create a new <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiException"/>.
            </summary>
            <param name="error">
            	The reason that the exception is being raised.
            </param>
            <param name="additionalDetail">
            	Additional error detail (if any) provided by the CaaS API.
            </param>
            <param name="messageOrFormat">
            	The exception message or message format.
            </param>
            <param name="formatArguments">
            	Optional message format arguments.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiException.#ctor(DD.CBU.Compute.Api.Client.ComputeApiError,System.String,System.String,Status,System.Uri,System.Object[])">
             <summary>
            		Create a new <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiException"/>.
             </summary>
             <param name="error">
            		The reason that the exception is being raised.
             </param>
             <param name="additionalDetail">
            		Additional error detail (if any) provided by the CaaS API.
             </param>
             <param name="messageOrFormat">
            		The exception message or message format.
             </param>
            <param name="uri"></param>
            <param name="formatArguments">
            		Optional message format arguments.
             </param>
            <param name="status"></param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiException.#ctor(DD.CBU.Compute.Api.Client.ComputeApiError,System.String,System.String,System.Exception,System.Object[])">
            <summary>
            	Create a new <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiException"/>.
            </summary>
            <param name="error">
            	The reason that the exception is being raised.
            </param>
            <param name="additionalDetail">
            	Additional error detail (if any) provided by the CaaS API.
            </param>
            <param name="messageOrFormat">
            	The exception message or message format.
            </param>
            <param name="innerException">
            	A previous exception that caused the current exception to be raised.
            </param>
            <param name="formatArguments">
            	Optional message format arguments.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            	Deserialisation constructor for <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiException"/>.
            </summary>
            <param name="info">
            	A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> serialisation data store that holds the serialized exception data.
            </param>
            <param name="context">
            	A <see cref="T:System.Runtime.Serialization.StreamingContext"/> value that indicates the source of the serialised data.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	The <paramref name="info"/> parameter is null.
            </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            	The class name is <c>null</c> or <see cref="P:System.Exception.HResult"/> is zero (0).
            </exception>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            	Get exception data for serialisation.
            </summary>
            <param name="info">
            	A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> serialisation data store that will hold the serialized exception data.
            </param>
            <param name="context">
            	A <see cref="T:System.Runtime.Serialization.StreamingContext"/> value that indicates the source of the serialised data.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	The <paramref name="info"/> parameter is null.
            </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            	The class name is <c>null</c> or <see cref="P:System.Exception.HResult"/> is zero (0).
            </exception>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiException.InvalidCredentials(System.String)">
            <summary>
            	Create a <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiException"/> to be raised because the CaaS API indicates that the supplied credentials are invalid..
            </summary>
            <param name="loginName">
            	The login name that the API indicates is invalid.
            </param>
            <returns>
            	The configured <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiException"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiException.InvalidRequest(System.String,System.String)">
            <summary>
            Creates a <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiException"/> to be raised because the CaaS API indicates a bad HTTP request
            </summary>
            <param name="operation">The operation that was attempted</param>
            <param name="details">Further error details</param>
            <returns>The configured <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiException"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiException.InvalidRequest(System.String,System.String,Status,System.Uri)">
            <summary>
            Creates a <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiException"/> to be raised because the CaaS API indicates a bad HTTP request
            </summary>
            <param name="operation">The operation that was attempted</param>
            <param name="details">Further error details</param>
            <param name="status"></param>
            <param name="uri"></param>
            <returns>The configured <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiException"/></returns>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.ComputeApiException.Status">
            <summary>
            The error status of the exception
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.ComputeApiException.Uri">
            <summary>
            The uri which caused the exception
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.ComputeApiException.Error">
            <summary>
            	The reason that the <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiException"/> was raised.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.ComputeApiException.HaveAdditionalDetail">
            <summary>
            	Does the exception include additional error details from the CaaS API?
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.ComputeApiException.AdditionalDetail">
            <summary>
            	Additional error detail (if any) provided by the CaaS API.
            </summary>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.ComputeApiError">
            <summary>
            	Represents the reason that a <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiException"/> was raised.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.ComputeApiError.Unknown">
            <summary>
            	An unknown reason.
            </summary>
            <remarks>
            	Used to detect uninitialised values; do not use directly.
            </remarks>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.ComputeApiError.InvalidCredentials">
            <summary>
            	The CaaS API indicates that the supplied credentials are invalid.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.ComputeApiError.BadRequest">
            <summary>
            The CaaS API indicates a bad request and return a descriptive (Status) error
            </summary>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Customers.ComputeApiClientCustomersExtensions">
            <summary>
            Api calls to apis defined in Customers Api category
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Customers.ComputeApiClientCustomersExtensions.ProvisionCustomerInHomeGeo(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.Guid,DD.CBU.Compute.Api.Contracts.Provisioning.CustomerProvision)">
            <summary>
            Provision Net Terms Customer
            </summary>
            <param name="computeApiClient">Compute Api Client</param>
            <param name="organizationId">
            Organization Id
            </param>
            <param name="customerProvision">
            The custom Provisioning.
            </param>
            <returns>
            Provision Status
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Customers.ComputeApiClientCustomersExtensions.ProvisionCustomerInGeo(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.Guid,System.Guid,System.String)">
            <summary>
            Provision Customer on a multi-geography data center
            </summary>
            <param name="computeApiClient">
            The compute Api Client.
            </param>
            <param name="organizationId">
            The customer Id.
            </param>
            <param name="geographyId">
            The geography Id.
            </param>
            <param name="customerPricingPlanKey">
            The pricing Plan Key.
            </param>
            <returns>
            Statuc
            </returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.HttpContentExtensions">
            <summary>
            	Extension methods for working with <see cref="T:System.Net.Http.HttpContent"/>.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.HttpContentExtensions.XmlDeserializeAsync``1(System.Net.Http.HttpContent)">
            <summary>
            	XML-deserialise the specified content
            </summary>
            <typeparam name="T">
            	The XML-serialisable type into which the content should be deserialised.
            </typeparam>
            <param name="content">
            	The <see cref="T:System.Net.Http.HttpContent"/> to deserialise.
            </param>
            <returns>
            	An instance of <typeparamref name="T"/> representing the deserialised content.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="content"/> is <c>null</c>.
            </exception>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.ImportExportImages.ComputeApiClientImportExportExtensions">
            <summary>
            Extension methods for the "import and export of customer images" section of the CaaS API.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ImportExportImages.ComputeApiClientImportExportExtensions.GetOvfPackages(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient)">
            <summary>
            Gets the OVF Packages that have been uploaded to the FTPS account for the supplied organization ID.
            An empty list will be returned if no OVF Packages have been uploaded by the organization.
            </summary>
            <param name="client">The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object</param>
            <returns>The OVF Packages</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ImportExportImages.ComputeApiClientImportExportExtensions.GetCustomerImagesImports(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient)">
            <summary>
            This function identifies the Customer Image Imports that are in progress for the supplied organization ID.
            </summary>
            <param name="client">The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object</param>
            <returns>The customer image imports currently in progress</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ImportExportImages.ComputeApiClientImportExportExtensions.ImportCustomerImage(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,System.String,System.String,System.String)">
            <summary>
            Starts the process of importing an OVF Package to become a new Customer Image for the supplied organization ID.
            This function takes the full name (including the “.mf” file suffix) of the manifest file identifying the OVF Package to import as a new Customer Image.
            </summary>
            <param name="client">The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object</param>
            <param name="customerImageName"> 1-75 characters in length.
            The permitted character set is (within and excluding the quotes): “a-zA-Z0-9_+=# .,:;()-“.
            Note that the “space” character is permitted</param>
            <param name="ovfPackageName">References a manifest identifying an OVF Package on the organization’s FTPS account.
            Maximum length 75 characters.
            The permitted character set is (within and excluding the quotes): “a-zA-Z0-9_+=#.,:;()-“.
            Note that the “space” character is not permitted</param>
            <param name="networkLocation">Identifies the target data center location for the Customer Image.
            The target data center must reside within the same Geographic Region</param>
            <param name="description">0-255 characters in length.</param>
            <returns>Returns the ServerImageWithState object</returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Interfaces.IHttpClient">
            <summary>
            Represents a type that can make HttpClient calls.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IHttpClient.GetAsync(System.Uri)">
            <summary>
            Get asynchronously
            </summary>
            <param name="uri">The URI</param>
            <returns></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IHttpClient.DeleteAsync(System.Uri)">
            <summary>
            Delete asynchronously
            </summary>
            <param name="uri">The URI</param>
            <returns></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IHttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
            <summary>
            Put asynchronously
            </summary>
            <param name="uri">The URI</param>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IHttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
            <summary>
            Post asynchronously
            </summary>
            <param name="uri">The URI</param>
            <param name="content">The content to post</param>
            <returns></returns>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Interfaces.IHttpClient.BaseAddress">
            <summary>
            	The base address used by the HTTP client.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.Interfaces.HttpClientAdapter._client">
            <summary>
            	The underlying <see cref="T:System.Net.Http.HttpClient"/>.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.HttpClientAdapter.#ctor(System.Net.Http.HttpClient)">
            <summary>
            	Create a new <see cref="T:System.Net.Http.HttpClient"/> adaptor.
            </summary>
            <param name="client">
            	The <see cref="T:System.Net.Http.HttpClient"/> wrapped by the adaptor.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.HttpClientAdapter.Dispose(System.Boolean)">
            <summary>
            	Dispose of resources being used by the disposable object.
            </summary>
            <param name="disposing">
            	Explicit disposal?
            </param>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Interfaces.HttpClientAdapter.BaseAddress">
            <summary>
            	The base address used by the HTTP client.
            </summary>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Interfaces.IWebApi">
            <summary>
            The web API interface for communication with CaaS REST API.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IWebApi.ApiGetAsync``1(System.Uri)">
            <summary>
            	Invoke a CaaS API operation using a HTTP GET request.
            </summary>
            <typeparam name="TResult">
            	The XML-serialisable data contract type into which the response will be deserialised.
            </typeparam>
            <param name="relativeOperationUri">
            	The operation URI (relative to the CaaS API's base URI).
            </param>
            <returns>
            	The operation result.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IWebApi.ApiPostAsync``2(System.Uri,``0)">
            <summary>
            Invoke a CaaS API operation using a HTTP POST request.
            </summary>
            <typeparam name="TObject">The XML-Serialisable data contract type that the request will be sent.</typeparam>
            <typeparam name="TResult">The XML-serialisable data contract type into which the response will be deserialised.</typeparam>
            <param name="relativeOperationUri">The operation URI (relative to the CaaS API's base URI).</param>
            <param name="content">The content that will be deserialised and passed in the body of the POST request.</param>
            <returns>The operation result.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IWebApi.LoginAsync(System.Net.ICredentials)">
            <summary>
            	Asynchronously log into the CaaS API.
            </summary>
            <param name="accountCredentials">
            	The CaaS account credentials used to authenticate against the CaaS API.
            </param>
            <returns>
            	An <see cref="T:DD.CBU.Compute.Api.Contracts.Directory.IAccount"/> implementation representing the CaaS account that the client is logged into.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IWebApi.Logout">
            <summary>
            	Log out of the CaaS API.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Interfaces.IWebApi.IsLoggedIn">
            <summary>
            Is the API client currently logged in to the CaaS API?
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Interfaces.IWebApi.Account">
            <summary>
            	Read-only information about the CaaS account targeted by the CaaS API client.
            </summary>
            <remarks>
            	<c>null</c>, unless logged in.
            </remarks>
            <seealso cref="M:DD.CBU.Compute.Api.Client.Interfaces.IWebApi.LoginAsync(System.Net.ICredentials)"/>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Network.ComputeApiClientNetworkExtensions">
            <summary>
            Extension methods for the Network section of the CaaS API.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.ComputeApiClientNetworkExtensions.CreateNetwork(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,System.String,System.String)">
            <summary>
            Deploys a new network in a designated data center location.
            The designated data center must be chosen from your available data centers list (See "List Data Centers (With Parameters)").
            The "location" property of the data center is used to identify it for network creation.
            The "name" property must be unique within your organization. 
            </summary>
            <param name="client">The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object.</param>
            <param name="networkName">A unique network name for the new network.</param>
            <param name="dataCentreLocation">The data centre location.</param>
            <param name="description">Optional. A decription for the network.</param>
            <returns>A status of the response.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.ComputeApiClientNetworkExtensions.GetNetworksTask(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient)">
            <summary>
            Gets the networks with locations
            </summary>
            <param name="client">The <see cref="T:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient"/> object.</param>
            <returns>The networks</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.ComputeApiClientNetworkExtensions.DeleteNetwork(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String)">
            <summary>
            Retrieves the details of a specific network owned by a customer.
            This API requires your organization ID and the ID of the target network.
            </summary>
            <param name="client">The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object.</param>
            <param name="networkId">The network id to delete.</param>
            <returns>A status of the response.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.ComputeApiClientNetworkExtensions.GetNatRules(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String)">
            <summary>
            Retrieves a list of NAT rules for a specified network.
            This API requires your organization ID and the ID of the target network.
            </summary>
            <param name="client">The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object.</param>
            <param name="networkId">The target network id.</param>
            <returns>The status of the operation.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.ComputeApiClientNetworkExtensions.DeleteNatRule(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,System.String)">
            <summary>
            Deletes an existing NAT rule for a specified network.
            This API requires your organization ID, the ID of the target network and the ID of the NAT rule to be deleted.
            </summary>
            <param name="client">The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object.</param>
            <param name="networkId">The target network id.</param>
            <param name="natRuleId">The NAT rule id to delete.</param>
            <returns>The status of the operation.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.ComputeApiClientNetworkExtensions.CreateNatRule(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,System.String,System.Net.IPAddress)">
            <summary>
            Creates a new NAT rule for a specified network.
            This API requires your organization ID and the ID of the target network.
            The XML structured request requires a <paramref name="natRuleName"/> element describing the NAT Rule and a <paramref name="sourceIp"/> which is the 
            underlying private IP address that the public IP address (natIp) returned in the response will be assigned to.
            Note that IP addresses *.0 through  *.10 are reserved and cannot be used as <paramref name="sourceIp"/> values.
            The available range is *.11 to *.254. For example “10.147.15.11” in the sample request below.
            An attempt to specify one of the reserved addresses as the <paramref name="sourceIp"/> will result in a REASON_240 reason code being returned.
            </summary>
            <param name="client">The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object.</param>
            <param name="networkId">The target network id.</param>
            <param name="natRuleName"></param>
            <param name="sourceIp"></param>
            <returns></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.ComputeApiClientNetworkExtensions.GetAclRules(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String)">
            <summary>
            Retrieves the list of ACL rules associated with a network.
            This API requires your organization ID and the ID of the target network.
            </summary>
            <param name="client">The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object</param>
            <param name="networkId">The target network id</param>
            <returns>The ACL rules.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.ComputeApiClientNetworkExtensions.DeleteAclRule(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,System.String)">
            <summary>
            Deletes a specified ACL rule. 
            This API requires your organization ID, the ID of the target network and the ID of the rule. 
            <remarks>Note: If the Cisco hardware is under heavy load when a Delete ACL Rule request is processed it is possible for a timeout to occur.
            In this situation the ACL rule deletion usually completes successfully but an error code REASON_292 will be returned to indicate that 
            the ACL rule is in a pending state and a support case should be opened for it to be removed.</remarks>
            </summary>
            <param name="client">The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object.</param>
            <param name="networkId">The target network id.</param>
            <param name="aclRuleId">The ACL rule to delete.</param>
            <returns>The status of the operation.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.ComputeApiClientNetworkExtensions.CreateAclRule(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,System.String,System.Int32,AclActionType,DD.CBU.Compute.Api.Client.Network.ComputeApiClientNetworkExtensions.AclProtocolType,PortRangeTypeType,System.Net.IPAddress,System.Net.IPAddress,System.Net.IPAddress,System.Net.IPAddress,System.Int32,System.Int32,AclType)">
            <summary>
            Creates a new ACL rule at a specified line using your organization ID and the ID of the target network.
            It is possible to create both inbound (OUTSIDE_ACL) and outbound (INSIDE_ACL) rule types.
            </summary>
            <param name="client">The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object.</param>
            <param name="networkId">The target network id.</param>
            <param name="aclRuleName">The name of the ACL rule.</param>
            <param name="position">The position of the rule between 100-500 inclusive.</param>
            <param name="action">The action (Permit/deny) of the ACL rule.</param>
            <param name="protocol">The protocol to use (IP, ICMP, TCP, UDP).</param>
            <param name="portRangeType">The port range type (ALL, EQUAL_TO, RANGE, GREATER_THAN, LESS_THAN).</param>
            <param name="sourceIpAddress">
            Optional. If no source IP Address is supplied, the assumption is that any source IP address is allowed.
            If a source IP address is supplied without the <paramref name="sourceNetmask"/>, source IP Address represent a single host.
            </param>
            <param name="sourceNetmask">
            Optional. When specified, the <paramref name="sourceIpAddress"/> must be the CIDR boundary for the network.
            </param>
            <param name="destIpAddress">
            Optional. If no destination IP Address is supplied, the assumption is that any destination IP address is allowed.
            If a destination IP address is supplied without the <paramref name="destNetmask"/>, source IP Address represent a single host.
            </param>
            <param name="destNetmask">
            Optional. When specified, the <paramref name="destIpAddress"/> must be the CIDR boundary for the network.
            </param>
            <param name="port1">Optional depending on <paramref name="portRangeType"/>. Value within a range of 1-65535.</param>
            <param name="port2">Optional depending on <paramref name="portRangeType"/>. Value within a range of 1-65535.</param>
            <param name="aclType">Optional. One of (OUTSIDE_ACL, INSIDE_ACL). Default if not specified is OUTSIDE_ACL.</param>
            <returns>The ACL rules.</returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Network.ComputeApiClientNetworkExtensions.AclProtocolType">
            <summary>
            All the ACL Protocol types.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.Network.ComputeApiClientNetworkExtensions.AclProtocolType.IP">
            <summary>
            IP type
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.Network.ComputeApiClientNetworkExtensions.AclProtocolType.ICMP">
            <summary>
            ICMP type
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.Network.ComputeApiClientNetworkExtensions.AclProtocolType.TCP">
            <summary>
            TCP type
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.Network.ComputeApiClientNetworkExtensions.AclProtocolType.UDP">
            <summary>
            UDP type
            </summary>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Vendor.ComputeApiClientVendorExtensions">
            <summary>
            Api calls to apis defined in Vendor Api category
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Vendor.ComputeApiClientVendorExtensions.ListPricingPlans(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.Guid,System.Guid)">
            <summary>
            List pricing plans for a organization
            </summary>
            <param name="computeApiClient">
            The compute Api Client.
            </param>
            <param name="organizationId">
            Organization Id
            </param>
            <param name="geoId">
            Geo Id
            </param>
            <returns>
            Pricing Plans
            </returns>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.WebApi._account">
            <summary>
            	The details for the CaaS account associated with the supplied credentials.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.WebApi._httpClient">
            <summary>
            	The <see cref="T:System.Net.Http.HttpClient"/> used to communicate with the CaaS API.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.WebApi._clientMessageHandler">
            <summary>
            	The <see cref="T:System.Net.Http.HttpMessageHandler"/> used to customise communications with the CaaS API.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.WebApi._mediaTypeFormatters">
            <summary>
            	Media type formatters used to serialise and deserialise data contracts when communicating with the CaaS API.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.WebApi.#ctor(System.Uri)">
            <summary>
            Creates a new CaaS API client using a base URI.
            </summary>
            <param name="baseUri">The base URI to use for the CaaS API.</param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.WebApi.#ctor(System.String)">
            <summary>
            Create a new Compute-as-a-Service API client.
            </summary>
            <param name="targetRegionName">
            The name of the region whose CaaS API end-point is targeted by the client.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.WebApi.#ctor(DD.CBU.Compute.Api.Client.Interfaces.IHttpClient)">
            <summary>
            Creates a new CaaS API client using a base URI.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.WebApi.LoginAsync(System.Net.ICredentials)">
            <summary>
            	Asynchronously log into the CaaS API.
            </summary>
            <param name="accountCredentials">
            	The CaaS account credentials used to authenticate against the CaaS API.
            </param>
            <returns>
            	An <see cref="T:DD.CBU.Compute.Api.Contracts.Directory.IAccount"/> implementation representing the CaaS account that the client is logged into.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.WebApi.Logout">
            <summary>
            	Log out of the CaaS API.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.WebApi.ApiPostAsync``2(System.Uri,``0)">
            <summary>
            Invoke a CaaS API operation using a HTTP POST request.
            </summary>
            <typeparam name="TObject">The XML-Serialisable data contract type that the request will be sent.</typeparam>
            <typeparam name="TResult">The XML-serialisable data contract type into which the response will be deserialised.</typeparam>
            <param name="relativeOperationUri">The operation URI (relative to the CaaS API's base URI).</param>
            <param name="content">The content that will be deserialised and passed in the body of the POST request.</param>
            <returns>The operation result.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.WebApi.Dispose(System.Boolean)">
            <summary>
            	Dispose of resources being used by the CaaS API client.
            </summary>
            <param name="disposing">
            	Explicit disposal?
            </param>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.WebApi.Account">
            <summary>
            	Read-only information about the CaaS account targeted by the CaaS API client.
            </summary>
            <remarks>
            	<c>null</c>, unless logged in.
            </remarks>
            <seealso cref="M:DD.CBU.Compute.Api.Client.WebApi.LoginAsync(System.Net.ICredentials)"/>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.WebApi.IsLoggedIn">
            <summary>
            Is the API client currently logged in to the CaaS API?
            </summary>
        </member>
    </members>
</doc>
